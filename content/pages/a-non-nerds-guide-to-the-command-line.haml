Layout: slides

%section
  %section
    %h3 A Non-Nerd's Guide To
    %h1 The Command Line
    %img(src='http://blog.marc-seeger.de/assets/2009/12/30/terminal.png'
         alt='' class='no-border')
    :markdown

      To jump right in and start using it, go that way. &rarr;

      &darr; Or go this way to get some context.

  %section
    %h2 1969
    :markdown
      The year [Unix][unix] was invented. It's still one of the most-used
      operating systems in the world (just think: all of Google's servers use
      it).  Mac OSX and Linux are based on it. When you use the command line,
      you're using your computer the way people used computers decades before
      colorful screens and the mouse were in use.

        [unix]: https://en.wikipedia.org/wiki/Unix

  %section
    %h2 Shell
    :markdown
      The [Bourne Shell][sh] (abbreviated as simply _sh_) was created as a way
      to interact with Unix in 1977.  Lots of other shells were invented later
      that added more features.  You may have noticed that your Terminal says
      something about "bash"&mdash; bash is the [Bourne-again shell][bash] and
      was first created in 1989. A lot of cool kids these days use [zsh][zsh]
      (z shell), if you care about what the cool kids do.

        [sh]: http://www-stat.wharton.upenn.edu/~buja/STAT-540/shell-Bourne-An-Introduction-to-the-Unix-Shell.htm
        [bash]: https://en.wikipedia.org/wiki/Bash_(Unix_shell)
        [zsh]: https://friedcpu.wordpress.com/2007/07/24/zsh-the-last-shell-youll-ever-need/

  %section
    %h2 So what?
    :markdown
      So why do people still use it?

      Because it's _easy_.

      That is, it's hard to write programs that use graphics. Writing programs
      that run in a shell, though, is easy as escargot. So, there are all kinds
      of things that you can only do using shell.

      Getting started in it is a bit strange, admittedly, but it opens up whole
      new worlds (it _is_ a whole new world). Don't get overwhelmed, just take
      it slow. Any familiarity will be great, so if it starts feeling
      overwhelming, just stop for the day.

%section
  %h2 Ingredients
  %h3 On a Mac
  :markdown
    * Hit Command & Space and type "Terminal". Open it. This is your "command
      line".
    * Open up Finder (you can do the Command-Space thing again).
  %h3 On Windows
  :markdown
    * Open up [Git-Bash][gitbash]. This is your "command line".
    * Open your My Documents folder (or whatever it's called these days).

      [gitbash]: http://git-scm.com/download/win

%section
  %section
    %h3 Listing
    :markdown
      The command line is a very simple way of interacting with a computer (simple
      for the computer, anyhow!). You just type a command and then hit "Enter" on
      your keyboard.

      <small>This obviously requires a bit of memorization. But
      the internet is there when we forget.</small>

      One command that people use all the time is listing files. Try it now! Type
      what comes after the dollar sign into your command line, and then hit Enter:

          $ ls

      Compare it to what you see in Finder/Explorer. It's an old-school way of
      listing files!

      &darr; That way to learn more about listing.

  %section
    %h3 Long Listing
    :markdown
      Now press the up arrow on your keyboard. Now that you got your `ls` back,
      turn it into this & hit Enter:

          $ ls -l

      The `-l` is called a "flag". You added a `-l` flag to the `ls` command,
      which tells `ls` to "long list" your files. This gives you all sorts of
      info about your files, like who owns them, what you can do with them,
      and the file size. Here's [what it all means][ls], if
      you're curious (and brave).

        [ls]: http://freeengineer.org/learnUNIXin10minutes.html#Listing

      One more thing about listing, right this way. &darr;

  %section
    %h3 Listing Hidden Files
    :markdown
      All this time using your computer, and you never even knew it was hiding
      all sorts of things from you! Enter this:

          $ ls -al

      Now you've added _two_ flags for `ls`. The `l` tells it to list "long",
      the `a` tells it to list "all". Not just the usual stuff, but all the
      stuff that's usually hidden from you, too!

      #### Mac & Linux Only

      Hidden files, as you can see, start with a dot. They're often called
      "dotfiles". Notice the two "files" listed at the top, the single dot
      and the double dot. These aren't actual files. You'll learn more about
      them soon.

